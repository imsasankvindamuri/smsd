from ..networking import Request as Request
from ..networking.exceptions import HTTPError as HTTPError
from ..utils import ExtractorError as ExtractorError, NO_DEFAULT as NO_DEFAULT, clean_html as clean_html, determine_ext as determine_ext, format_field as format_field, int_or_none as int_or_none, merge_dicts as merge_dicts, orderedSet as orderedSet, remove_quotes as remove_quotes, remove_start as remove_start, str_to_int as str_to_int, update_url_query as update_url_query, url_or_none as url_or_none, urlencode_postdata as urlencode_postdata
from .common import InfoExtractor as InfoExtractor
from .openload import PhantomJSwrapper as PhantomJSwrapper

class PornHubBaseIE(InfoExtractor): ...

class PornHubIE(PornHubBaseIE):
    IE_DESC: str

class PornHubPlaylistBaseIE(PornHubBaseIE): ...
class PornHubUserIE(PornHubPlaylistBaseIE): ...
class PornHubPagedPlaylistBaseIE(PornHubPlaylistBaseIE): ...

class PornHubPagedVideoListIE(PornHubPagedPlaylistBaseIE):
    @classmethod
    def suitable(cls, url): ...

class PornHubUserVideosUploadIE(PornHubPagedPlaylistBaseIE): ...
class PornHubPlaylistIE(PornHubPlaylistBaseIE): ...
