from ..utils import ExtractorError as ExtractorError, clean_html as clean_html, decode_packed_codes as decode_packed_codes, float_or_none as float_or_none, format_field as format_field, get_element_by_attribute as get_element_by_attribute, get_element_by_id as get_element_by_id, int_or_none as int_or_none, js_to_json as js_to_json, ohdave_rsa_encrypt as ohdave_rsa_encrypt, parse_age_limit as parse_age_limit, parse_duration as parse_duration, parse_iso8601 as parse_iso8601, parse_resolution as parse_resolution, qualities as qualities, remove_start as remove_start, str_or_none as str_or_none, traverse_obj as traverse_obj, urljoin as urljoin
from .common import InfoExtractor as InfoExtractor
from .openload import PhantomJSwrapper as PhantomJSwrapper
from _typeshed import Incomplete

def md5_text(text): ...

class IqiyiSDK:
    target: Incomplete
    ip: Incomplete
    timestamp: Incomplete
    def __init__(self, target, ip, timestamp) -> None: ...
    @staticmethod
    def split_sum(data): ...
    @staticmethod
    def digit_sum(num): ...
    def even_odd(self): ...
    def preprocess(self, chunksize): ...
    def mod(self, modulus) -> None: ...
    def split(self, chunksize) -> None: ...
    def handle_input16(self) -> None: ...
    def handle_input8(self) -> None: ...
    def handleSum(self) -> None: ...
    def date(self, scheme) -> None: ...
    def split_time_even_odd(self) -> None: ...
    def split_time_odd_even(self) -> None: ...
    def split_ip_time_sum(self) -> None: ...
    def split_time_ip_sum(self) -> None: ...

class IqiyiSDKInterpreter:
    sdk_code: Incomplete
    def __init__(self, sdk_code) -> None: ...
    def run(self, target, ip, timestamp): ...

class IqiyiIE(InfoExtractor):
    IE_NAME: str
    IE_DESC: str
    def get_raw_data(self, tvid, video_id): ...

class IqIE(InfoExtractor):
    IE_NAME: str
    IE_DESC: str

class IqAlbumIE(InfoExtractor):
    IE_NAME: str
